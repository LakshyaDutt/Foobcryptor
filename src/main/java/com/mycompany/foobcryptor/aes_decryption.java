/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.foobcryptor;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.security.spec.KeySpec;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author lakshya
 */
public class aes_decryption extends javax.swing.JFrame {
    String key = "1234567891234567";
    String input,output,saltFile,ivFile,saltPath,ivPath;
    
     public static void decrypt_aes(String inputFile, String outputFile, String saltPath, String ivPath) throws Exception {
         String passkey = JOptionPane.showInputDialog("Please Enter the Decryption Key");
         
         //Reading the Salt
         FileInputStream saltFile = new FileInputStream(saltPath);
         byte[] salt = new byte[8];
         saltFile.read(salt);
         saltFile.close();
         
         //Reading the IV
         FileInputStream ivFile = new FileInputStream(ivPath);
         byte[] iv = new byte[16];
         ivFile.read(iv);
         ivFile.close();
         
         SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");
         KeySpec keySpec = new PBEKeySpec(passkey.toCharArray(), salt, 65536, 256);
         SecretKey tmp = factory.generateSecret(keySpec);
         SecretKey secret = new SecretKeySpec(tmp.getEncoded(),"AES");
         
         Cipher cipher = Cipher.getInstance("AES/CBC/PKCS5PADDING");
         cipher.init(Cipher.DECRYPT_MODE, secret, new IvParameterSpec(iv));
         FileInputStream inFile = new FileInputStream(inputFile);
         FileOutputStream outFile = new FileOutputStream(outputFile);
         
         byte[] in = new byte[64];
         int read;
         
         while((read = inFile.read(in)) != -1){
             byte[] output = cipher.update(in, 0, read);
             if(output != null)
                 outFile.write(output);
         }
         byte[] output = cipher.doFinal();
         if(output != null)
             outFile.write(output);
        
         inFile.close();
         outFile.flush();
         outFile.close();
         
         JOptionPane.showMessageDialog(null, "File Decrypted Successfuly");
         
    }
    
    public aes_decryption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selectedFileLBL = new javax.swing.JLabel();
        fileLBL = new javax.swing.JLabel();
        selectfileBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        saltBTN = new javax.swing.JButton();
        ivBTN = new javax.swing.JButton();
        saltLBL = new javax.swing.JLabel();
        ivLBL = new javax.swing.JLabel();
        decryptBTN = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectedFileLBL.setText("No file selected");

        fileLBL.setText("File");

        selectfileBTN.setText("Select");
        selectfileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectfileBTNActionPerformed(evt);
            }
        });

        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        jLabel1.setText("Salt File");

        jLabel2.setText("IV File");

        saltBTN.setText("Select");
        saltBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saltBTNActionPerformed(evt);
            }
        });

        ivBTN.setText("Select");
        ivBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivBTNActionPerformed(evt);
            }
        });

        saltLBL.setText("No file selected");

        ivLBL.setText("No file selected");

        decryptBTN.setText("DECRYPT");
        decryptBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptBTNActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel3.setText("AES DECRYPTION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(322, Short.MAX_VALUE)
                        .addComponent(backBTN))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fileLBL)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(44, 44, 44)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ivLBL)
                                    .addComponent(saltLBL)
                                    .addComponent(ivBTN)
                                    .addComponent(saltBTN)
                                    .addComponent(selectedFileLBL)
                                    .addComponent(selectfileBTN)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(decryptBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileLBL)
                    .addComponent(selectfileBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectedFileLBL)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(saltBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saltLBL)
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ivBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ivLBL)
                .addGap(18, 18, 18)
                .addComponent(decryptBTN)
                .addGap(18, 18, 18)
                .addComponent(backBTN)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectfileBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectfileBTNActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            input = file.getAbsolutePath();
            if(file == null){
                JOptionPane.showMessageDialog(null,"No file selected, please select a file!");
            }
            else{
                selectedFileLBL.setText(file.getName());
            }

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(null,"File selection cancelled!");
        }
        else if(result == JFileChooser.ERROR_OPTION){
            JOptionPane.showMessageDialog(null,"Error selecting file");

        }
    }//GEN-LAST:event_selectfileBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        decryption_type op = new decryption_type();
        op.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_backBTNActionPerformed

    private void saltBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saltBTNActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File saltFile = fileChooser.getSelectedFile();
            saltPath = saltFile.getAbsolutePath();
            if(saltFile == null){
                JOptionPane.showMessageDialog(null,"No file selected, please select a salt file!");
            }
            else{
                saltLBL.setText(saltFile.getName());
            }

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(null,"Salt File selection cancelled!");
        }
        else if(result == JFileChooser.ERROR_OPTION){
            JOptionPane.showMessageDialog(null,"Error selecting salt file");

        }
        
    }//GEN-LAST:event_saltBTNActionPerformed

    private void ivBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivBTNActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File ivFile = fileChooser.getSelectedFile();
            ivPath = ivFile.getAbsolutePath();
            if(ivFile == null){
                JOptionPane.showMessageDialog(null,"No file selected, please select a IV file!");
            }
            else{
                ivLBL.setText(ivFile.getName());
            }

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(null,"IV File selection cancelled!");
        }
        else if(result == JFileChooser.ERROR_OPTION){
            JOptionPane.showMessageDialog(null,"Error selecting IV file");

        }
    }//GEN-LAST:event_ivBTNActionPerformed

    private void decryptBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptBTNActionPerformed
        
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save Decrypted File");

        int userSelection = fileChooser.showSaveDialog(this);

        if(userSelection == JFileChooser.APPROVE_OPTION){
            File toSave = fileChooser.getSelectedFile();
            output = toSave.getAbsolutePath();
            try {
                decrypt_aes(input, output, saltPath, ivPath);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Save cancelled");
        }  
    }//GEN-LAST:event_decryptBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(aes_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(aes_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(aes_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(aes_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new aes_decryption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JButton decryptBTN;
    private javax.swing.JLabel fileLBL;
    private javax.swing.JButton ivBTN;
    private javax.swing.JLabel ivLBL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton saltBTN;
    private javax.swing.JLabel saltLBL;
    private javax.swing.JLabel selectedFileLBL;
    public javax.swing.JButton selectfileBTN;
    // End of variables declaration//GEN-END:variables
}
