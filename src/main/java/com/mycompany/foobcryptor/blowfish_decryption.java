/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.foobcryptor;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.security.Key;
import java.security.SecureRandom;
import java.security.spec.KeySpec;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.PBEKeySpec;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author lakshya
 */
public class blowfish_decryption extends javax.swing.JFrame {
    String input, output, saltFile, saltPath, ivFile, ivPath;
    File file;
    
    
    public static void blowfish_decrypt(String inputFile, String outputFile, String saltPath, String ivPath) throws Exception{
        String passkey = JOptionPane.showInputDialog("Please enter the decryption key");
        
        FileInputStream saltFile = new FileInputStream(saltPath);
        byte[] salt = new byte[8];
        saltFile.read(salt);
        saltFile.close();
        
        FileInputStream ivFile = new FileInputStream(ivPath);
        byte[] iv = new byte[8];
        ivFile.read(iv);
        ivFile.close();
        
        
        SecretKeyFactory factory = SecretKeyFactory.getInstance("PBKDF2WithHmacSHA1");
        KeySpec keySpec = new PBEKeySpec(passkey.toCharArray(), salt, 65536, 256);
        SecretKey tmp = factory.generateSecret(keySpec);
        SecretKey secret = new SecretKeySpec(tmp.getEncoded(), "Blowfish");
        
        Cipher cipher = Cipher.getInstance("Blowfish/CBC/PKCS5PADDING");
        cipher.init(Cipher.DECRYPT_MODE, secret, new IvParameterSpec(iv));
        
        FileInputStream inFile = new FileInputStream(inputFile);
        FileOutputStream outFile = new FileOutputStream(outputFile);
        byte[] input = new byte[64];
        int bytesRead;
        
        while((bytesRead = inFile.read(input)) != -1){
            byte[] output = cipher.update(input, 0, bytesRead);
            if(output != null)
                outFile.write(output);
        }
        
        byte[] output = cipher.doFinal();
        if(output != null)
            outFile.write(output);
        
        inFile.close();
        outFile.flush();
        outFile.close();
        JOptionPane.showMessageDialog(null,"File Decrypted");
    }
    
    public blowfish_decryption() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fileBTN = new javax.swing.JButton();
        saltBTN = new javax.swing.JButton();
        fileLBL = new javax.swing.JLabel();
        saltLBL = new javax.swing.JLabel();
        decryptBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        ivLBL = new javax.swing.JLabel();
        ivBTN = new javax.swing.JButton();
        ivFileLBL = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("File");

        jLabel2.setText("Salt");

        fileBTN.setText("SELECT");
        fileBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileBTNActionPerformed(evt);
            }
        });

        saltBTN.setText("SELECT");
        saltBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saltBTNActionPerformed(evt);
            }
        });

        fileLBL.setText("No file selected");

        saltLBL.setText("No file selected");

        decryptBTN.setText("DECRYPT");
        decryptBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptBTNActionPerformed(evt);
            }
        });

        backBTN.setText("BACK");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        ivLBL.setText("IV");

        ivBTN.setText("SELECT");
        ivBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ivBTNActionPerformed(evt);
            }
        });

        ivFileLBL.setText("No file selected");

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 1, 18)); // NOI18N
        jLabel3.setText("BLOWFISH DECRYPTION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(328, Short.MAX_VALUE)
                .addComponent(backBTN))
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(decryptBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addComponent(ivLBL, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGap(33, 33, 33)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(ivBTN)
                                .addComponent(saltLBL)
                                .addComponent(fileLBL)
                                .addComponent(saltBTN)
                                .addComponent(fileBTN)
                                .addComponent(ivFileLBL)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(fileBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fileLBL)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(saltBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saltLBL)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ivLBL)
                    .addComponent(ivBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ivFileLBL)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(decryptBTN)
                .addGap(18, 18, 18)
                .addComponent(backBTN))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void decryptBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptBTNActionPerformed
    JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Save Decrypted File");

        int userSelection = fileChooser.showSaveDialog(this);

        if(userSelection == JFileChooser.APPROVE_OPTION){
            File toSave = fileChooser.getSelectedFile();
            output = toSave.getAbsolutePath();
            try {
                blowfish_decrypt(input, output, saltPath, ivPath);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null,ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"Save cancelled");
        }
    }//GEN-LAST:event_decryptBTNActionPerformed

    private void saltBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saltBTNActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File saltFile = fileChooser.getSelectedFile();
            saltPath = saltFile.getAbsolutePath();
            if(saltFile == null){
                JOptionPane.showMessageDialog(null,"No file selected, please select a salt file!");
            }
            else{
                saltLBL.setText(saltFile.getName());
            }

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(null,"Salt File selection cancelled!");
        }
        else if(result == JFileChooser.ERROR_OPTION){
            JOptionPane.showMessageDialog(null,"Error selecting salt file");

        }
    }//GEN-LAST:event_saltBTNActionPerformed

    private void fileBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileBTNActionPerformed
    JFileChooser fileChooser = new JFileChooser();
        
        int result = fileChooser.showOpenDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION){
            file = fileChooser.getSelectedFile();
            input = file.getAbsolutePath();
            
            if(file == null){
                JOptionPane.showMessageDialog(null,"No file selected, please select a file!");
            }
            else{
                fileLBL.setText(file.getName());
            }
            
        }
        else if(result == JFileChooser.CANCEL_OPTION){
                    JOptionPane.showMessageDialog(null,"File selection cancelled!");
                    }
        else if(result == JFileChooser.ERROR_OPTION){
            JOptionPane.showMessageDialog(null,"Error selecting file");
            
        }
    }//GEN-LAST:event_fileBTNActionPerformed

    private void ivBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ivBTNActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if(result == JFileChooser.APPROVE_OPTION){
            File ivFile = fileChooser.getSelectedFile();
            ivPath = ivFile.getAbsolutePath();
            if(ivFile == null){
                JOptionPane.showMessageDialog(null,"No file selected, please select a IV file!");
            }
            else{
                ivFileLBL.setText(ivFile.getName());
            }

        }
        else if(result == JFileChooser.CANCEL_OPTION){
            JOptionPane.showMessageDialog(null,"IV File selection cancelled!");
        }
        else if(result == JFileChooser.ERROR_OPTION){
            JOptionPane.showMessageDialog(null,"Error selecting IV file");

        }
    }//GEN-LAST:event_ivBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        decryption_type dt = new decryption_type();
        dt.show();
        this.setVisible(false);
    }//GEN-LAST:event_backBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(blowfish_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(blowfish_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(blowfish_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(blowfish_decryption.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new blowfish_decryption().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JButton decryptBTN;
    private javax.swing.JButton fileBTN;
    private javax.swing.JLabel fileLBL;
    private javax.swing.JButton ivBTN;
    private javax.swing.JLabel ivFileLBL;
    private javax.swing.JLabel ivLBL;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton saltBTN;
    private javax.swing.JLabel saltLBL;
    // End of variables declaration//GEN-END:variables
}
